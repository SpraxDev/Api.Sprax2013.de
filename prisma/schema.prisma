generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id            String   @id @db.Uuid
  nameLowercase String   @map("name_lowercase")
  raw           Json
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")
  firstSeen     DateTime @default(now()) @map("first_seen")
  deleted       Boolean  @default(false)

  @@map("profiles")
}

view ProfileCache {
  id            String @id @db.Uuid
  nameLowercase String @map("name_lowercase")
  raw           Json
  ageInSeconds  Int    @map("age_in_seconds")

  @@map("profile_cache")
}

model Skin {
  id                  BigInt @id @default(dbgenerated("generate_snowflake('skin_urls_id_seq'::text)"))
  originalImageSha256 Bytes  @map("original_image_sha256")

  image SkinImage @relation(fields: [originalImageSha256], references: [originalImageSha256])

  @@map("skins")
}

model SkinUrl {
  url                 String   @id
  originalImageSha256 Bytes    @map("original_image_sha256")
  textureValue        String?  @map("texture_value")
  textureSignature    String?  @map("texture_signature")
  createdAt           DateTime @default(now()) @map("created_at")

  image SkinImage @relation(fields: [originalImageSha256], references: [originalImageSha256])

  @@map("skin_urls")
}

model SkinImage {
  originalImageSha256 Bytes    @id @map("original_image_sha256")
  originalImage       Bytes    @map("original_image")
  normalizedImage     Bytes    @map("normalized_image")
  createdAt           DateTime @default(now()) @map("created_at")

  skins    Skin[]
  skinUrls SkinUrl[]

  @@map("skin_images")
}

model ServerBlocklistChanges {
  sha1         Bytes
  changeIsAdd  Boolean  @map("change_is_add")
  changeSeenAt DateTime @default(now()) @map("change_seen_at")

  @@id([sha1, changeSeenAt])
  @@index([sha1, changeSeenAt(sort: Desc)])
  @@map("server_blocklist_changes")
}

view ServerBlocklist {
  sha1 Bytes @id

  @@map("server_blocklist")
}
